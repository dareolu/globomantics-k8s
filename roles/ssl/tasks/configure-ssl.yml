---
  # - name: SSL > Download Cloudflare SSL packages
  #   get_url:
  #     url: "{{ item }}"
  #     dest: "{{ download_dir }}/"
  #     mode: 0777
  #     force: no
  #   with_items:
  #     - https://pkg.cfssl.org/R1.2/cfssl_linux-amd64
  #     - https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64

  # - name: SSL > Move cfssl to /usr/local/bin
  #   copy:
  #     src: "{{ download_dir }}/{{ item.src }}"
  #     dest: "/usr/local/bin/{{ item.dest }}"
  #     owner: root
  #     group: root
  #     mode: 0777
  #   with_items:
  #     - { src: cfssl_linux-amd64, dest: cfssl }
  #     - { src: cfssljson_linux-amd64, dest: cfssljson }


  - name: SSL > Prepare Certificate Authority | And CSR configuration files
    template:
      src: "{{ item.src }}"
      dest: "{{ cfssl_dir }}/{{ item.dest }}"
      mode: 0644
      owner: root
      group: root
    with_items:
      - {src: ca-config.json.j2, dest: ca-config.json}
      - {src: ca-csr.json.j2, dest: ca-csr.json}

  - name:  Generate the certificate authority certificate and private key.
    shell: |
            cfssl gencert -initca ca-csr.json | cfssljson -bare ca && touch ca_cert_and_private_key_created
    args:
      chdir: "{{ cfssl_dir }}"
      creates: ca_cert_and_private_key_created


  - name: SSL > Prepare SSL certificate configuration file for the Etcd cluster
    template:
      src: "{{ item.src }}"
      dest: "{{ cfssl_dir }}/{{ item.dest }}"
      mode: 0644
      owner: root
      group: root
    with_items:
      - {src: etcd-k8s-csr.json.j2, dest: etcd-k8s-csr.json}


  - name:  Generate the certificate and private key for the ETCD Cluster .
    shell: |
            cfssl gencert \
            -ca=ca.pem \
            -ca-key=ca-key.pem \
            -config=ca-config.json \
            -hostname={{ groups['k8smaster'][0]}},{{ groups['k8smaster'][1]}},{{ groups['k8smaster'][2]}},{{ groups['management'][0]}},127.0.0.1,kubernetes.default \
            -profile=kubernetes etcd-k8s-csr.json | \
            cfssljson -bare kubernetes && touch  etcd_cert_and_private_key_created
    args:
      chdir: "{{ cfssl_dir }}"
      creates: etcd_cert_and_private_key_created
